{"version":3,"sources":["types/types.js","components/Bar.jsx","actions/todo.js","components/TodoInput.jsx","components/TodoItem.jsx","components/TodoList.jsx","components/TodoScreen.jsx","reducers/todoReducer.js","store/store.js","TodoApp.jsx","index.js"],"names":["types","Bar","dispatch","useDispatch","todosVal","useSelector","state","todos","filter","todo","isCompleted","useState","active","setActive","className","length","onClick","type","initialState","TodoInput","inputValues","setInputValues","onSubmit","e","preventDefault","payload","id","Date","getTime","todoAddNew","placeholder","name","value","autoComplete","onChange","target","TodoItem","isActive","setIsActive","useEffect","todoComplete","disabled","xmlns","width","height","fill","stroke","strokeWidth","d","todoSetActive","todoDelete","fillRule","TodoList","renderTodos","userAction","map","TodoScreen","isDark","setIsDark","document","querySelector","classList","toggle","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","TodoApp","ReactDOM","render","getElementById"],"mappings":"gLAEaA,EACA,iBADAA,EAEG,eAFHA,EAGG,kBAHHA,EAII,iBAJJA,EAKQ,sBALRA,EAOa,6BAPbA,EASK,qBATLA,EAUQ,wBAVRA,EAWU,0BAXVA,EAaG,kBAbHA,EAcM,qBAdNA,EAeQ,uB,OCbRC,EAAM,WAEf,IAAMC,EAAWC,cAsBXC,EADUC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAApCA,MACgBC,QAAO,SAAAC,GAAI,OAAKA,EAAKC,eAE5C,EAA4BC,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,OACI,sBAAKC,UAAU,WAAf,UACI,qBAAKA,UAAU,aAAf,SACI,8BAAIV,EAASW,OAAb,mBAEJ,sBAAKD,UAAU,sBAAf,UACI,mBACIA,UAAoB,IAATF,EAAW,WAAW,GACjCI,QA5BO,WACnBd,ECuCgC,CACpCe,KAAKjB,IDvCDa,EAAU,IAwBF,iBAIA,mBACIC,UAAoB,IAATF,EAAW,WAAW,GACjCI,QA3BU,WACtBd,ECsCmC,CACvCe,KAAKjB,IDtCDa,EAAU,IAuBF,oBAGA,mBACIC,UAAoB,IAATF,EAAW,WAAW,GACjCI,QAzBY,WACxBd,ECqCqC,CACzCe,KAAKjB,IDrCDa,EAAU,IAqBF,0BAIJ,qBACIC,UAAU,wBACVE,QA3CyB,WACjCd,EC2BmC,CACvCe,KAAKjB,KDYG,SAGI,sD,cEhDVkB,EAAe,CACjBT,KAAK,IAEIU,EAAY,WAErB,MAAsCR,mBAASO,GAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KACOZ,EAAQW,EAARX,KAaDP,EAAWC,cAOjB,OACI,sBAAKW,UAAU,qBAAf,UAEI,qBAAKA,UAAU,gBAGf,sBACIA,UAAU,YACVQ,SAdS,SAACC,GAClBA,EAAEC,iBACFtB,EDvBkB,SAACO,GAAD,MAAW,CACjCQ,KAAKjB,EACLyB,QAAQ,CACJC,IAAI,IAAIC,MAAOC,UACfnB,OACAC,aAAY,ICkBHmB,CAAWpB,IANpBY,EAAeH,IAgBX,SAII,uBACID,KAAK,OACLa,YAAY,uBACZC,KAAK,OACLC,MAAOvB,EACPK,UAAU,aACVmB,aAAa,MACbC,SAnCU,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACxBd,EAAe,2BACRD,GADO,kBAETe,EAAOJ,KAAMI,EAAOH,kBCVpBI,EAAW,SAAC,GAA2B,IAA1B3B,EAAyB,EAAzBA,KAAKiB,EAAoB,EAApBA,GAAGhB,EAAiB,EAAjBA,YAE9B,EAAgCC,oBAAS,GAAzC,mBAAO0B,EAAP,KAAiBC,EAAjB,KACMpC,EAAWC,cACVS,EAAUP,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAArCK,OAwBP,OARA2B,qBAAU,YACG,OAAN3B,QAAM,IAANA,OAAA,EAAAA,EAAQc,MAAOA,EACdY,GAAY,GAEZA,GAAY,KAEjB,QAAC1B,QAAD,IAACA,OAAD,EAACA,EAAQc,GAAGA,IAIX,sBACIZ,UAAU,YADd,UAGQ,sBAAKA,UAAU,WAAf,UACI,wBACIA,UAAWJ,EAAY,qBAAqB,cAC5CM,QA9BM,WACtBd,EFSoB,SAACO,GAAD,MAAW,CACnCQ,KAAKjB,EACLyB,QAAQhB,GEXK+B,CAAa,CAACd,KAAGjB,WA8BVgC,WAAU/B,EAHd,SAII,qBAAKgC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,IAA1D,SAA8D,sBAAMC,KAAK,OAAOC,OAAO,OAAOC,YAAY,IAAIC,EAAE,6BAEpH,qBACIlC,UAAU,YACVE,QAhCI,WACpBd,EFJqB,SAACO,GAAD,MAAW,CACpCQ,KAAKjB,EACLyB,QAAQhB,GEEKwC,CAAc,CAACvB,KAAGjB,WA6Bf,SAGI,mBACIK,UAAWJ,EAAY,aAAa,GADxC,SAEKD,SAIb,qBACIK,UAAWuB,EAAW,oBAAsB,aAC5CrB,QApCK,WACjBd,EFKkB,SAACwB,GAAD,MAAS,CAC/BT,KAAKjB,EACLyB,QAAQC,GEPKwB,CAAWxB,IACpBxB,EFL+B,CACnCe,KAAKjB,KEoCO,SAGQ,qBAAK0C,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAA1D,SAA+D,sBAAMC,KAAK,UAAUM,SAAS,UAAUH,EAAE,4IClDpHI,EAAW,WAGpB,MAAuC/C,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAA3D8C,EAAP,EAAOA,YAAYC,EAAnB,EAAmBA,WAAW/C,EAA9B,EAA8BA,MAExBL,EAAWC,cAcjB,OAbAoC,qBAAU,WACN,MAAkB,QAAfe,EACQpD,EHyBiB,CAChCe,KAAKjB,IGxBiB,YAAfsD,EACQpD,EH0BoB,CACnCe,KAAKjB,IGzBiB,cAAfsD,EACQpD,EH2BsB,CACrCe,KAAKjB,SG7BD,IAID,CAACsD,EAAW/C,EAAML,IAIjB,qBAAKY,UAAU,YAAf,SACKuC,EAAYE,KAAI,SAAA9C,GAAI,OACjB,cAAC,EAAD,CAEQiB,GAAIjB,EAAKiB,GACTjB,KAAMA,EAAKA,KACXC,YAAaD,EAAKC,aAHbD,EAAKiB,UC1BrB8B,EAAa,WAEtB,MAA4B7C,oBAAS,GAArC,mBAAO8C,EAAP,KAAeC,EAAf,KAOA,OACI,sBAAK5C,UAAU,OAAf,UACI,sBAAKA,UAAU,cAAf,UACI,mBAAGA,UAAU,aAAb,kBACA,qBAAKE,QATS,WACtB2C,SAASC,cAAc,QAAQC,UAAUC,OAAO,QAChDJ,GAAWD,IAOH,SACKA,EACC,qBAAKf,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAA1D,SAA+D,sBAAMC,KAAK,OAAOM,SAAS,UAAUH,EAAE,qhBACtG,qBAAKN,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAA1D,SAA+D,sBAAMC,KAAK,OAAOM,SAAS,UAAUH,EAAE,6LAIhH,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,uBCzBN9B,EAAe,CACjBX,MAAM,CACF,CAACmB,GAAG,cAAcjB,KAAK,oCAAoCC,aAAY,GACvE,CAACgB,GAAG,cAAcjB,KAAK,yBAAyBC,aAAY,GAC5D,CAACgB,GAAG,cAAcjB,KAAK,wBAAwBC,aAAY,GAC3D,CAACgB,GAAG,cAAcjB,KAAK,kBAAkBC,aAAY,GACrD,CAACgB,GAAG,cAAcjB,KAAK,oBAAoBC,aAAY,GACvD,CAACgB,GAAG,cAAcjB,KAAK,uCAAuCC,aAAY,IAE9E2C,YAAY,GACZC,WAAW,MACX1C,OAAO,MCRLmD,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAErGC,EAAWC,YAAgB,CAC7B7D,MDQuB,WAAgC,IAA/BD,EAA8B,uDAAxBY,EAAamD,EAAW,uCACtD,OAAQA,EAAOpD,MACX,KAAKjB,EACD,OAAO,2BACAM,GADP,IAEIC,MAAM,GAAD,mBAAKD,EAAMC,OAAX,CAAiB8D,EAAO5C,YAGrC,KAAKzB,EACD,OAAO,2BACAM,GADP,IAEIM,OAAOyD,EAAO5C,UAEtB,KAAKzB,EACD,kCACOM,GADP,IAEIC,MAAMD,EAAMC,MAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKiB,KAAO2C,EAAO5C,aAG5D,KAAKzB,EACD,kCACOM,GADP,IAEIM,OAAO,OAGf,KAAKZ,EACD,kCACOM,GADP,IAEIC,MAAMD,EAAMC,MAAMgD,KACd,SAAA9C,GAAI,OAAIA,EAAKiB,KAAO2C,EAAO5C,QAAQC,GAA3B,2BACHjB,GADG,IACEC,aAAY,IACrBD,OAGb,KAAKT,EACD,kCACOM,GADP,IAEI+C,YAAY,YAAI/C,EAAMC,SAG9B,KAAKP,EACD,kCACOM,GADP,IAEI+C,YAAY/C,EAAMC,MAAMC,QAAO,SAAAC,GAAI,OAAyB,IAArBA,EAAKC,iBAGpD,KAAKV,EACD,kCACOM,GADP,IAEI+C,YAAY/C,EAAMC,MAAMC,QAAO,SAAAC,GAAI,OAAyB,IAArBA,EAAKC,iBAGpD,KAAKV,EACD,kCACOM,GADP,IAEIgD,WAAW,YAGnB,KAAKtD,EACD,kCACOM,GADP,IAEIgD,WAAW,QAGnB,KAAKtD,EACD,kCACOM,GADP,IAEIgD,WAAW,cAGnB,KAAKtD,EACD,kCACOM,GADP,IAEIC,MAAMD,EAAMC,MAAMC,QAAO,SAAAC,GAAI,OAAyB,IAArBA,EAAKC,iBAG9C,QACI,OAAOJ,MCjFNgE,EAAQC,YACjBJ,EACAJ,EAAiBS,YAAgBC,OCVxBC,EAAU,WACnB,OACI,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACI,cAAC,EAAD,O,MCHZK,IAASC,OACL,cAAC,EAAD,IACFjB,SAASkB,eAAe,W","file":"static/js/main.91de8b77.chunk.js","sourcesContent":["\n\nexport const types = {\n    todoAdd: 'New Todo Added',\n    todoDelete: 'Todo Deleted',\n    todoActive: 'Todo Set Active',\n    todoComplete:'Todo Completed',\n    todoRemoveActive:'Todo Active Removed',\n    todoCompleteDeleted:'Todo Complete deleted',\n    todoAllCompleteDelete:'All Todos Complete Deleted',\n\n    todoRenderAll:'All Todos Rendered',\n    todoRenderActive:'Active Todos Rendered',\n    todoRenderComplete:'Complete Todos Rendered',\n\n    todoUserAll:'User Action All',\n    todoUserActive:'User Action Active',\n    todoUserComplete:'User Action Complete'\n\n}","import React, { useState } from 'react'\nimport { useDispatch, useSelector} from 'react-redux';\nimport { todoClearAllComplete, todoUserActionActive,todoUserActionComplete,todoUserActionAll} from '../actions/todo';\n\nexport const Bar = () => {\n\n    const dispatch = useDispatch();\n    \n    const handleClearAllCompletedTodos = () => {\n        dispatch(todoClearAllComplete());\n    }\n\n    const handleAllTodos = () => {\n        dispatch(todoUserActionAll());\n        setActive(1);\n    }\n\n    const handleActiveTodos = () => {\n        dispatch(todoUserActionActive());\n        setActive(2);\n    }\n\n    const handleCompleteTodos = () => {\n        dispatch(todoUserActionComplete());\n        setActive(3);\n    }\n\n    const {todos} = useSelector(state => state.todos);\n    const todosVal = todos.filter(todo => !todo.isCompleted);\n\n    const [active, setActive] = useState(1);\n\n    return (\n        <div className=\"todo-bar\">\n            <div className=\"flex-child\">\n                <p>{todosVal.length} items left</p>\n            </div>\n            <div className=\"flex-row flex-child\">\n                <p \n                    className={active===1?\"p-active\":\"\"}\n                    onClick={handleAllTodos}\n                    >All</p>\n                <p \n                    className={active===2?\"p-active\":\"\"}\n                    onClick={handleActiveTodos}>Active</p>\n                <p \n                    className={active===3?\"p-active\":\"\"}\n                    onClick={handleCompleteTodos}>Completed</p>\n            </div>\n            <div \n                className=\"flex-child todo-clear\"\n                onClick={handleClearAllCompletedTodos}>\n                <p>Clear completed</p>\n            </div>\n        </div>\n    )\n}\n","import { types } from \"../types/types\";\n\n\nexport const todoAddNew = (todo) => ({\n    type:types.todoAdd,\n    payload:{\n        id: new Date().getTime(),\n        todo,\n        isCompleted:false\n    }\n});\n\nexport const todoSetActive = (todo) => ({\n    type:types.todoActive,\n    payload:todo\n});\n\nexport const todoRemoveActive = () => ({\n    type:types.todoRemoveActive\n});\n\nexport const todoComplete = (todo) => ({\n    type:types.todoComplete,\n    payload:todo\n});\n\nexport const todoDelete = (id) => ({\n    type:types.todoDelete,\n    payload:id\n});\n\nexport const todoCompleteDelete = (id) => ({\n    type:types.todoCompleteDeleted,\n    payload:id\n});\n\nexport const todoClearAllComplete = () => ({\n    type:types.todoAllCompleteDelete\n});\n\nexport const todoRenderAll = () => ({\n    type:types.todoRenderAll\n});\n\nexport const todoRenderActive = () => ({\n    type:types.todoRenderActive\n});\n\nexport const todoRenderComplete = () => ({\n    type:types.todoRenderComplete\n});\n\nexport const todoUserActionAll = () => ({\n    type:types.todoUserAll\n});\n\nexport const todoUserActionActive = () => ({\n    type:types.todoUserActive\n});\n\nexport const todoUserActionComplete = () => ({\n    type:types.todoUserComplete\n});","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { todoAddNew } from '../actions/todo';\n\nconst initialState = {\n    todo:''\n}\nexport const TodoInput = () => {\n\n    const [inputValues, setInputValues] = useState(initialState);\n    const {todo} = inputValues;\n\n    const handleInputChange = ({target}) => {\n        setInputValues({\n            ...inputValues,\n            [target.name]:target.value\n        })\n    }\n\n    const resetINputValues = () => {\n        setInputValues(initialState);\n    }\n\n    const dispatch = useDispatch();\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(todoAddNew(todo));\n        resetINputValues();\n    }\n\n    return (\n        <div className=\"todo-input-content\">\n\n            <div className=\"todo-circle\">\n                \n            </div>\n            <form \n                className=\"todo-form\"\n                onSubmit={handleSubmit}\n                >\n                <input \n                    type=\"text\"\n                    placeholder=\"Create a new todo...\"\n                    name=\"todo\"\n                    value={todo}\n                    className=\"todo-input\"\n                    autoComplete=\"off\"\n                    onChange={handleInputChange}/>\n            </form>\n        </div>\n    )\n}\n","import React, { useState,useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { todoComplete, todoSetActive, todoDelete,todoRemoveActive} from '../actions/todo';\n\nexport const TodoItem = ({todo,id,isCompleted}) => {\n\n    const [isActive, setIsActive] = useState(false);\n    const dispatch = useDispatch();\n    const {active} = useSelector(state => state.todos);\n\n   const handleSetCompleted = () => {\n        dispatch(todoComplete({id,todo}));\n    }\n\n    const handleSetActive = () => {\n        dispatch(todoSetActive({id,todo}));\n        \n    }\n\n    const handleDelete = () => {\n        dispatch(todoDelete(id));\n        dispatch(todoRemoveActive());\n    }\n\n    useEffect(() => {\n        if(active?.id === id){\n            setIsActive(true);\n        }else{\n            setIsActive(false);\n        }\n    }, [active?.id,id]);\n\n    return (\n\n        <div \n            className=\"todo-item\"\n            >\n                <div className=\"flex-row\">\n                    <button\n                        className={isCompleted?\"todo-circle-active\":\"todo-circle\"}\n                        onClick={handleSetCompleted}\n                        disabled={isCompleted?true:false}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"11\" height=\"9\"><path fill=\"none\" stroke=\"#FFF\" strokeWidth=\"2\" d=\"M1 4.304L3.696 7l6-6\"/></svg>\n                    </button>\n                    <div\n                        className=\"todo-text\"\n                        onClick={handleSetActive}>\n                        <p \n                            className={isCompleted?\"underlined\":\"\"}>\n                            {todo}\n                        </p>\n                    </div>\n                </div>\n                <div\n                    className={isActive ? \"todo-cross-active\" : \"todo-cross\"}\n                    onClick={handleDelete}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\"><path fill=\"#494C6B\" fillRule=\"evenodd\" d=\"M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z\"/></svg>\n                    </div>\n        </div>\n        \n    )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { todoRenderActive, todoRenderAll, todoRenderComplete } from '../actions/todo';\n\n\nimport { TodoItem } from './TodoItem';\n\nexport const TodoList = () => {\n\n    \n    const {renderTodos,userAction,todos} = useSelector(state => state.todos);\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if(userAction === \"all\"){\n            return dispatch(todoRenderAll());\n        }\n        if(userAction === \"actives\"){\n            return dispatch(todoRenderActive());\n        }\n        if(userAction === \"completed\"){\n            return dispatch(todoRenderComplete())\n        }\n        \n    }, [userAction,todos,dispatch])\n\n    return (\n\n        <div className=\"todo-list\">\n            {renderTodos.map(todo =>\n                <TodoItem\n                        key={todo.id} \n                        id={todo.id} \n                        todo={todo.todo}\n                        isCompleted={todo.isCompleted}\n                    />\n            )}\n        </div>         \n    )\n}\n","import React, { useState } from 'react'\nimport { Bar } from './Bar'\nimport { TodoInput } from './TodoInput'\nimport { TodoList } from './TodoList'\n\nexport const TodoScreen = () => {\n\n    const [isDark, setIsDark] = useState(false);\n\n    const handleChangeTheme = () => {\n        document.querySelector('body').classList.toggle('dark');\n        setIsDark(!isDark);\n    }\n\n    return (\n        <div className=\"main\">\n            <div className=\"flex-row-sp\">\n                <p className=\"todo-title\">TODO</p>\n                <div onClick={handleChangeTheme}>\n                    {isDark\n                    ? <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\"><path fill=\"#FFF\" fillRule=\"evenodd\" d=\"M13 21a1 1 0 011 1v3a1 1 0 11-2 0v-3a1 1 0 011-1zm-5.657-2.343a1 1 0 010 1.414l-2.121 2.121a1 1 0 01-1.414-1.414l2.12-2.121a1 1 0 011.415 0zm12.728 0l2.121 2.121a1 1 0 01-1.414 1.414l-2.121-2.12a1 1 0 011.414-1.415zM13 8a5 5 0 110 10 5 5 0 010-10zm12 4a1 1 0 110 2h-3a1 1 0 110-2h3zM4 12a1 1 0 110 2H1a1 1 0 110-2h3zm18.192-8.192a1 1 0 010 1.414l-2.12 2.121a1 1 0 01-1.415-1.414l2.121-2.121a1 1 0 011.414 0zm-16.97 0l2.121 2.12A1 1 0 015.93 7.344L3.808 5.222a1 1 0 011.414-1.414zM13 0a1 1 0 011 1v3a1 1 0 11-2 0V1a1 1 0 011-1z\"/></svg>\n                    : <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\"><path fill=\"#FFF\" fillRule=\"evenodd\" d=\"M13 0c.81 0 1.603.074 2.373.216C10.593 1.199 7 5.43 7 10.5 7 16.299 11.701 21 17.5 21c2.996 0 5.7-1.255 7.613-3.268C23.22 22.572 18.51 26 13 26 5.82 26 0 20.18 0 13S5.82 0 13 0z\"/></svg>\n                    }\n                </div>\n            </div>\n            <TodoInput />\n            <TodoList />\n            <Bar/>\n            \n        </div>\n    )\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    todos:[\n        {id:1628117238776,todo:'Complete online JavaScript course',isCompleted:true},\n        {id:1628117248821,todo:'Jog around the park 3x',isCompleted:false},\n        {id:1628117255256,todo:'10 minutes meditation',isCompleted:false},\n        {id:1628117262744,todo:'Read for 1 hour',isCompleted:false},\n        {id:1628117271462,todo:'Pick up groceries',isCompleted:false},\n        {id:1628117289442,todo:'Complete Todo App on Frontend mentor',isCompleted:false}\n    ],\n    renderTodos:[],\n    userAction:'all',\n    active:null\n}\n\nexport const todoReducer = (state=initialState,action) => {\n    switch (action.type) {\n        case types.todoAdd:\n            return {\n                ...state,\n                todos:[...state.todos,action.payload]\n            };\n\n        case types.todoActive:\n            return {\n                ...state,\n                active:action.payload\n            }\n        case types.todoDelete:\n            return{\n                ...state,\n                todos:state.todos.filter(todo => todo.id !== action.payload ) \n            }\n\n        case types.todoRemoveActive:\n            return{\n                ...state,\n                active:null\n            }\n        \n        case types.todoComplete:\n            return{\n                ...state,\n                todos:state.todos.map(\n                    todo => todo.id === action.payload.id\n                    ?{...todo,isCompleted:true}\n                    :todo)\n            }\n\n        case types.todoRenderAll:\n            return{\n                ...state,\n                renderTodos:[...state.todos]\n            }\n\n        case types.todoRenderActive:\n            return{\n                ...state,\n                renderTodos:state.todos.filter(todo => todo.isCompleted === false)\n            }\n\n        case types.todoRenderComplete:\n            return{\n                ...state,\n                renderTodos:state.todos.filter(todo => todo.isCompleted === true)\n            }\n\n        case types.todoUserActive:\n            return{\n                ...state,\n                userAction:'actives'\n            }\n\n        case types.todoUserAll:\n            return{\n                ...state,\n                userAction:'all'\n            }\n\n        case types.todoUserComplete:\n            return{\n                ...state,\n                userAction:'completed'\n            }\n\n        case types.todoAllCompleteDelete:\n            return{\n                ...state,\n                todos:state.todos.filter(todo => todo.isCompleted === false)\n            }\n    \n        default:\n            return state;\n    }\n}\n","import { createStore,combineReducers,applyMiddleware,compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { todoReducer } from \"../reducers/todoReducer\";\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    todos:todoReducer\n});\n\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(thunk))\n)\n","import React from 'react'\nimport { TodoScreen } from './components/TodoScreen'\nimport { Provider } from \"react-redux\";\nimport { store } from './store/store';\nexport const TodoApp = () => {\n    return (\n        <Provider store={store}>\n            <TodoScreen/>\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TodoApp } from './TodoApp';\nimport './styles/styles.scss';\nReactDOM.render(\n    <TodoApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}